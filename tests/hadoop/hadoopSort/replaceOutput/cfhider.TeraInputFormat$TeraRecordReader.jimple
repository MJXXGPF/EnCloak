class cfhider.TeraInputFormat$TeraRecordReader extends java.lang.Object implements org.apache.hadoop.mapred.RecordReader
{
    private org.apache.hadoop.mapred.LineRecordReader in;
    private org.apache.hadoop.io.LongWritable junk;
    private org.apache.hadoop.io.Text line;
    private static int KEY_LENGTH;
    public java.lang.String Cuuid;

    public void <init>(org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapred.FileSplit) throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.conf.Configuration r1;
        org.apache.hadoop.mapred.FileSplit r2;
        org.apache.hadoop.io.LongWritable $r3;
        org.apache.hadoop.io.Text $r4;
        org.apache.hadoop.mapred.LineRecordReader $r5;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        r1 := @parameter0: org.apache.hadoop.conf.Configuration;
        r2 := @parameter1: org.apache.hadoop.mapred.FileSplit;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new org.apache.hadoop.io.LongWritable;
        specialinvoke $r3.<org.apache.hadoop.io.LongWritable: void <init>()>();
        r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.LongWritable junk> = $r3;
        $r4 = new org.apache.hadoop.io.Text;
        specialinvoke $r4.<org.apache.hadoop.io.Text: void <init>()>();
        r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line> = $r4;
        $r5 = new org.apache.hadoop.mapred.LineRecordReader;
        specialinvoke $r5.<org.apache.hadoop.mapred.LineRecordReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit)>(r1, r2);
        r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.mapred.LineRecordReader in> = $r5;
        return;
    }

    public void close() throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.mapred.LineRecordReader $r1;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.mapred.LineRecordReader in>;
        virtualinvoke $r1.<org.apache.hadoop.mapred.LineRecordReader: void close()>();
        return;
    }

    public org.apache.hadoop.io.Text createKey()
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.io.Text $r1;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = new org.apache.hadoop.io.Text;
        specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>();
        return $r1;
    }

    public org.apache.hadoop.io.Text createValue()
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.io.Text $r1;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = new org.apache.hadoop.io.Text;
        specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>();
        return $r1;
    }

    public long getPos() throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.mapred.LineRecordReader $r1;
        long $l0;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.mapred.LineRecordReader in>;
        $l0 = virtualinvoke $r1.<org.apache.hadoop.mapred.LineRecordReader: long getPos()>();
        return $l0;
    }

    public float getProgress() throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.mapred.LineRecordReader $r1;
        float $f0;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.mapred.LineRecordReader in>;
        $f0 = virtualinvoke $r1.<org.apache.hadoop.mapred.LineRecordReader: float getProgress()>();
        return $f0;
    }

    public boolean next(org.apache.hadoop.io.Text, org.apache.hadoop.io.Text) throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.io.Text r1, r2, $r6, $r7, $r8, $r9, $r10;
        byte[] r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, tmpResult7, tmpGetField8, tmpResult102;
        org.apache.hadoop.mapred.LineRecordReader $r4;
        org.apache.hadoop.io.LongWritable $r5;
        boolean $z0, branchInvokeResult;
        long invokeLineNo;
        java.lang.String getUUID, invokeUUID;
        invoker.sgx_invoker sgxInvoker;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        r1 := @parameter0: org.apache.hadoop.io.Text;
        r2 := @parameter1: org.apache.hadoop.io.Text;
        tmpResult102 = 0;
        tmpGetField8 = 0;
        tmpResult7 = 0;
        r3 = null;
        $i0 = 0;
        $i1 = 0;
        $r4 = null;
        $r5 = null;
        $r6 = null;
        $z0 = 0;
        $r7 = null;
        $i2 = 0;
        $i3 = 0;
        $r8 = null;
        $r9 = null;
        $i4 = 0;
        $r10 = null;
        $i5 = 0;
        $i6 = 0;
        invokeLineNo = 0L;
        getUUID = null;
        invokeUUID = null;
        branchInvokeResult = 0;
        sgxInvoker = null;
        sgxInvoker = new invoker.sgx_invoker;
        specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>();
        getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo);
        $r4 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.mapred.LineRecordReader in>;
        $r5 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.LongWritable junk>;
        $r6 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line>;
        $z0 = virtualinvoke $r4.<org.apache.hadoop.mapred.LineRecordReader: boolean next(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text)>($r5, $r6);
        if $z0 == 0 goto label2;

        $r7 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line>;
        $i2 = virtualinvoke $r7.<org.apache.hadoop.io.Text: int getLength()>();
        $i3 = <cfhider.TeraInputFormat$TeraRecordReader: int KEY_LENGTH>;
        if $i2 >= $i3 goto label0;

        $r8 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line>;
        virtualinvoke r1.<org.apache.hadoop.io.Text: void set(org.apache.hadoop.io.Text)>($r8);
        virtualinvoke r2.<org.apache.hadoop.io.Text: void clear()>();
        goto label1;

     label0:
        $r9 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line>;
        r3 = virtualinvoke $r9.<org.apache.hadoop.io.Text: byte[] getBytes()>();
        $i0 = <cfhider.TeraInputFormat$TeraRecordReader: int KEY_LENGTH>;
        virtualinvoke r1.<org.apache.hadoop.io.Text: void set(byte[],int,int)>(r3, 0, $i0);
        $i4 = <cfhider.TeraInputFormat$TeraRecordReader: int KEY_LENGTH>;
        $r10 = r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text line>;
        tmpResult7 = virtualinvoke $r10.<org.apache.hadoop.io.Text: int getLength()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpResult7);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 7L);
        tmpGetField8 = <cfhider.TeraInputFormat$TeraRecordReader: int KEY_LENGTH>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpGetField8);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i0);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i4);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 8L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 9L);
        tmpResult102 = virtualinvoke sgxInvoker.<invoker.sgx_invoker: int getIntValue(java.lang.String,int,long)>(getUUID, 0, 10L);
        virtualinvoke r2.<org.apache.hadoop.io.Text: void set(byte[],int,int)>(r3, $i4, tmpResult102);

     label1:
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L);
        return 1;

     label2:
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L);
        return 0;
    }

    public volatile java.lang.Object createValue()
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.io.Text $r1;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = virtualinvoke r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text createValue()>();
        return $r1;
    }

    public volatile java.lang.Object createKey()
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        org.apache.hadoop.io.Text $r1;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        $r1 = virtualinvoke r0.<cfhider.TeraInputFormat$TeraRecordReader: org.apache.hadoop.io.Text createKey()>();
        return $r1;
    }

    public volatile boolean next(java.lang.Object, java.lang.Object) throws java.io.IOException
    {
        cfhider.TeraInputFormat$TeraRecordReader r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.io.Text $r3, $r4;
        boolean $z0, branchInvokeResult;
        long invokeLineNo;
        java.lang.String getUUID, invokeUUID;
        invoker.sgx_invoker sgxInvoker;

        r0 := @this: cfhider.TeraInputFormat$TeraRecordReader;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = null;
        $r4 = null;
        $z0 = 0;
        invokeLineNo = 0L;
        getUUID = null;
        invokeUUID = null;
        branchInvokeResult = 0;
        sgxInvoker = null;
        sgxInvoker = new invoker.sgx_invoker;
        specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>();
        $r3 = (org.apache.hadoop.io.Text) r1;
        $r4 = (org.apache.hadoop.io.Text) r2;
        $z0 = virtualinvoke r0.<cfhider.TeraInputFormat$TeraRecordReader: boolean next(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)>($r3, $r4);
        return $z0;
    }

    static void <clinit>()
    {
        <cfhider.TeraInputFormat$TeraRecordReader: int KEY_LENGTH> = 10;
        return;
    }
}
